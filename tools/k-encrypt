#!/usr/bin/env python3

from argparse import ArgumentParser, RawDescriptionHelpFormatter
from pathlib import Path
from argcomplete import autocomplete

prog = Path(__file__)
epilog = f"""\
{prog.name} reads data on stdin, encrypts it with Fernet, and writes it on
stdout.

Minimal Practical Example:
$ KEY=`k-keygen __salt__`
Password: # asdf
$ echo $KEY
WZ2LEFgT9On5y0K2WAjWa_v7hAoj1kQctgeeAyy6Lng=
$ echo secret
secret
$ echo secret | k-encrypt $KEY && echo
gAAAAABfEPnrCLN8rBQZdDCvynZn-PWQlvoaxqOfkVt1tvM60V0TUWyJIv6UQKTYsWjP5bPzJZNPEvEW6JUViFBZE1phqcZE6A==
$ echo secret | k-encrypt $KEY | k-decrypt $KEY
secret
"""
parser = ArgumentParser(
    prog=prog.name,
    description='Encrypting Filter',
    epilog=epilog,
    formatter_class=RawDescriptionHelpFormatter,
)
parser.add_argument('key', type=str.encode, help="encryption key")
autocomplete(parser)
args = parser.parse_args()

from sys import stdin, stdout, stderr, exit
from cryptography.fernet import Fernet

try:
    fernet = Fernet(args.key)
except ValueError as e:
    print(f'{prog.name}: {e}', file=stderr)
    exit(1)
data = stdin.buffer.read()
encrypted = fernet.encrypt(data)
stdout.buffer.write(encrypted)
